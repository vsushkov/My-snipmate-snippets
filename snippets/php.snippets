snippet phpil
	<?php ${1} ?>
snippet ?
	<?php
	${1}
snippet vifil
	<?php if (${1:/* condition */}): ?>
		{VISUAL}<?php endif; ?>
snippet zdb
	Zend_Debug::dump($${1:variable}, __METHOD__ . '(' . __LINE__ . ')');${2}
snippet zdd
	Zend_Debug::dump($${1:variable}, __METHOD__ . '(' . __LINE__ . ')'); die;${2}
snippet who
	Zend_Debug::dump(get_class($${1:this}));${2}
snippet refm
	$ref = new ReflectionMethod($${1:this}, '${2:methodName}');
	Zend_Debug::dump($ref->getFileName(), __METHOD__ . '(' . __LINE__ . ')');${3}
snippet model
	Mage::getModel('${1:module/path}')${2};${3}
snippet single
	Mage::getSingleton('${1:module/path}')${2};${3}
snippet helper
	Mage::helper('${1:module/path}')${2};${3}
snippet resource
	Mage::getResourceModel('${1:module_mysql4/path}')${2};${3}
snippet block
	Mage::app()->getLayout()->createBlock('${1:core/template}')${2};${3}
snippet child
	<?php echo $this->getChildHtml('${1:name}') ?>${2}
snippet config
	Mage::getStoreConfig('${1:config/path}');${2}
snippet mdb
	mageDebugBacktrace();
snippet acl
	Mage::getSingleton('admin/session')->isAllowed('${1:acl/path}');${2}
snippet tril
	<?php echo $this->__('${1:Something}') ?>
snippet log
	Mage::log($${1:data}, Zend_Log::DEBUG, '${2:filename}.log');${3}
snippet file
	/**
	 * Oggetto Web extension for Magento
	 *
	 * NOTICE OF LICENSE
	 *
	 * This source file is subject to the Academic Free License (AFL 3.0)
	 * that is bundled with this package in the file LICENSE_AFL.txt.
	 * It is also available through the world-wide-web at this URL:
	 * http://opensource.org/licenses/afl-3.0.php
	 *
	 * DISCLAIMER
	 *
	 * Do not edit or add to this file if you wish to upgrade this module to newer
	 * versions in the future. If you wish to customize this module for your
	 * needs please refer to http://www.magentocommerce.com for more information.
	 *
	 * @category   Oggetto
	 * @package    Oggetto_${1:Module}
	 * @copyright  Copyright (c) 2012 Oggetto Web ltd. (http://www.oggettoweb.com/)
	 * @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
	 */
	${2}
snippet vfile
	/**
	 * vsushkov's extension for Magento
	 *
	 * NOTICE OF LICENSE
	 *
	 * This source file is subject to the Academic Free License (AFL 3.0)
	 * that is bundled with this package in the file LICENSE_AFL.txt.
	 * It is also available through the world-wide-web at this URL:
	 * http://opensource.org/licenses/afl-3.0.php
	 *
	 * DISCLAIMER
	 *
	 * Do not edit or add to this file if you wish to upgrade this module to newer
	 * versions in the future. If you wish to customize this module for your
	 * needs please refer to http://www.magentocommerce.com for more information.
	 *
	 * @category   Vsushkov
	 * @package    Vsushkov_${1:Module}
	 * @copyright  Copyright (c) `strftime('%Y')` Valentin Sushkov (http://www.vsushkov.com/)
	 * @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
	 */
	${2}
snippet doc_c
	/**
	 * ${1:Class comment}
	 *
	 * @category   Oggetto
	 * @package    Oggetto_${2:Module}
	 * @author     Valentin Sushkov <vsushkov@oggettoweb.com>
	 */
	${3}
snippet vdoc_c
	/**
	 * ${1:Class comment}
	 *
	 * @category   Vsushkov
	 * @package    Vsushkov_${2:Module}
	 * @author     Valentin Sushkov <me@vsushkov.com>
	 */
	${3}
# Canonical class name for Magento
snippet	mclass
	`substitute(substitute(expand("%:r"), 'app/code/local/', '', 'g'), '/', '_', 'g')`
# PHPUnit
snippet ae
	$this->assertEquals(${1:'value'}, $${2:variable});${3}
snippet an
	$this->assertNull($${1:variable});${2}
snippet ann
	$this->assertNotNull($${1:variable});${2}
snippet af
	$this->assertFalse($${1:variable});${2}
snippet at
	$this->assertTrue($${1:variable});${2}
snippet ahk
	$this->assertArrayHasKey('${1:key}', $${2:array});${3}
snippet anhk
	$this->assertArrayNotHasKey('${1:key}', $${2:array});${3}
snippet ai
	$this->assertInstanceOf('${1:Class_Name}', $${2:object});${3}
snippet lf
	@loadFixture
	* @doNotIndexAll
snippet lsf
	@loadSharedFixture
	* @doNotIndexAll
snippet skip
	$this->markTestSkipped();
snippet incomplete
	$this->markTestIncomplete();
snippet test
	public function test${1:Something}()
	{
		${2:$this->markTestIncomplete();}${3}
	}
snippet exp
	$this->expected()->getData()
snippet ec
	EcomDev_PHPUnit_Test_Case
snippet acnhc
	$this->assertConfigNodeHasChild('${1:path}', '${2:childName}');
snippet mmock
	$this->getModelMock('${1:path}', array('${2:method}'${3}));
snippet rmock
	$this->getResourceModelMock('${1:path}', array('${2:method}'${3}));
snippet bmock
	$this->getBlockMock('${1:path}', array('${2:method}'${3}));
snippet hmock
	$this->getHelperMock('${1:path}', array('${2:method}'${3}));
snippet exp
	expects($this->${1:once}())->method('${2:metod}')${3}
snippet expw
	expects($this->${1:once}())->method('${2:metod}')->with($this->${3:equalTo}(${4:value}));
snippet expr
	expects($this->${1:once}())->method('${2:metod}')->will($this->returnValue(${3:value}));
snippet expwr
	expects($this->${1:once}())->method('${2:metod}')
	    ->with($this->${3:equalTo}(${4:value}))
	    ->will($this->returnValue(${5:value}));
snippet rbm
	$this->replaceByMock('${1:model}', '${2:path}', $${3:var});
snippet set
	protected function setUp()
	{
		${1}
	}
snippet tear
	protected function tearDown()
	{
		${1}
	}
snippet sbc
	public static function setUpBeforeClass()
	{
		${1}
	}
snippet tdac
	public static function tearDownAfterClass()
	{
		${1}
	}

snippet here
	echo 'Hi, I am ' . __METHOD__ . '(' . __LINE__ . ')'; echo '<br />';
snippet observe
	public function ${1:methodName}(Varien_Event_Observer $observer)
	{

	}
snippet adminaction
	public function ${1:some}Action()
	{
		try {
			${2}
		} catch (Exception $e) {
			$this->_getSession()->addError($e->getMessage());
		}
		$this->_redirectReferer();
	}
